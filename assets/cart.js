class Cart extends HTMLElement{constructor(){super(),this.querySelectorAll('[name="updates[]"]').forEach((t=>t.addEventListener("change",(()=>this.change(t.dataset.lineItemKey,Number(t.value)))))),this.querySelectorAll(".btn-line-item-remove").forEach((t=>t.addEventListener("click",(()=>this.change(t.dataset.lineItemKey,0))))),this.showOffcanvasIfUrl(),this.adjustCollapses()}async add(t){t.append("sections",["cart-count-badge","offcanvas-cart"]),t.append("sections_url",window.location.pathname);const e=await fetch(`${window.Shopify.routes.cart_add_url}.js`,{method:"POST",body:t});console.log(e);const a=await e.json();console.log(a),e.ok?(window.dispatchEvent(new CustomEvent("kt.cart.added",{detail:a})),this.reloadCartElements(a.sections)):this.showError(a.description),document.querySelectorAll(".offcanvas").forEach((t=>{"offcanvas-cart"===t.id?window.bootstrap.Offcanvas.getOrCreateInstance(t).show():window.bootstrap.Offcanvas.getOrCreateInstance(t).hide()}))}async change(t,e){this.classList.add("loading");const a=await fetch(`${window.Shopify.routes.cart_change_url}.js`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({id:t,quantity:e,sections:["cart-count-badge","offcanvas-cart"],sections_url:window.location.pathname})});console.log(a);const s=await a.json();console.log(s),a.ok?(window.dispatchEvent(new CustomEvent("kt.cart.changed",{detail:s})),this.reloadCartElements(s.sections)):this.showError(s.description),this.classList.remove("loading")}reloadCartElements(t){for(const[e,a]of Object.entries(t)){const t=(new DOMParser).parseFromString(a,"text/html");switch(e){case"cart-count-badge":document.querySelectorAll(".cart-count-badge").forEach((t=>{const e=(new DOMParser).parseFromString(a,"text/html");t.replaceWith(e.querySelector(".cart-count-badge"))}));break;case"offcanvas-cart":this.replaceWith(t.querySelector("cart-container"))}}window.dispatchEvent(new CustomEvent("kt.cart.reloaded"))}showError(t){const e=this.querySelector(".alert");e&&(e.querySelector("[data-alert-msg]").innerHTML=t,e.removeAttribute("hidden"))}showOffcanvasIfUrl(){if(new URLSearchParams(window.location.search).has("cart")){const t=document.querySelector("#offcanvas-cart");t&&window.bootstrap.Offcanvas.getOrCreateInstance(t).show()}}adjustCollapses(){this.querySelectorAll('[data-bs-toggle="collapse"]').forEach((t=>{t.addEventListener("click",(()=>{setTimeout((()=>{const t=this.querySelector(".offcanvas-body");t.scroll({top:t.scrollHeight,behavior:"smooth"})}),250)}))}))}}customElements.define("cart-container",Cart);class CartNote extends HTMLElement{constructor(){super(),this.input=this.querySelector("textarea"),this.btn=this.querySelector("button"),this.btn.addEventListener("click",this.onSubmit.bind(this))}async onSubmit(){this.btn.classList.add("loading"),await fetch(`${window.Shopify.routes.cart_update_url}.js`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({note:this.input.value})}),this.btn.innerHTML=`âœ“ <span class="visually-hidden">${this.btn.dataset.textNoteSaved}</span>`,setTimeout((()=>{this.btn.innerHTML=this.btn.dataset.textBtnSave}),3e3),this.btn.classList.remove("loading")}}customElements.define("cart-note",CartNote);
